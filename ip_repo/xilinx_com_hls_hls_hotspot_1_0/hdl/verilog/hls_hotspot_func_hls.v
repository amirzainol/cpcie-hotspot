// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_hotspot_func_hls (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_stream_0_V_data_V_dout,
        in_stream_0_V_data_V_empty_n,
        in_stream_0_V_data_V_read,
        in_stream_0_V_keep_V_dout,
        in_stream_0_V_keep_V_empty_n,
        in_stream_0_V_keep_V_read,
        in_stream_0_V_strb_V_dout,
        in_stream_0_V_strb_V_empty_n,
        in_stream_0_V_strb_V_read,
        in_stream_0_V_user_V_dout,
        in_stream_0_V_user_V_empty_n,
        in_stream_0_V_user_V_read,
        in_stream_0_V_last_V_dout,
        in_stream_0_V_last_V_empty_n,
        in_stream_0_V_last_V_read,
        in_stream_0_V_id_V_dout,
        in_stream_0_V_id_V_empty_n,
        in_stream_0_V_id_V_read,
        in_stream_0_V_dest_V_dout,
        in_stream_0_V_dest_V_empty_n,
        in_stream_0_V_dest_V_read,
        in_stream_1_V_data_V_dout,
        in_stream_1_V_data_V_empty_n,
        in_stream_1_V_data_V_read,
        in_stream_1_V_keep_V_dout,
        in_stream_1_V_keep_V_empty_n,
        in_stream_1_V_keep_V_read,
        in_stream_1_V_strb_V_dout,
        in_stream_1_V_strb_V_empty_n,
        in_stream_1_V_strb_V_read,
        in_stream_1_V_user_V_dout,
        in_stream_1_V_user_V_empty_n,
        in_stream_1_V_user_V_read,
        in_stream_1_V_last_V_dout,
        in_stream_1_V_last_V_empty_n,
        in_stream_1_V_last_V_read,
        in_stream_1_V_id_V_dout,
        in_stream_1_V_id_V_empty_n,
        in_stream_1_V_id_V_read,
        in_stream_1_V_dest_V_dout,
        in_stream_1_V_dest_V_empty_n,
        in_stream_1_V_dest_V_read,
        out_stream_V_data_V_din,
        out_stream_V_data_V_full_n,
        out_stream_V_data_V_write,
        out_stream_V_keep_V_din,
        out_stream_V_keep_V_full_n,
        out_stream_V_keep_V_write,
        out_stream_V_strb_V_din,
        out_stream_V_strb_V_full_n,
        out_stream_V_strb_V_write,
        out_stream_V_user_V_din,
        out_stream_V_user_V_full_n,
        out_stream_V_user_V_write,
        out_stream_V_last_V_din,
        out_stream_V_last_V_full_n,
        out_stream_V_last_V_write,
        out_stream_V_id_V_din,
        out_stream_V_id_V_full_n,
        out_stream_V_id_V_write,
        out_stream_V_dest_V_din,
        out_stream_V_dest_V_full_n,
        out_stream_V_dest_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 42'b1;
parameter    ap_ST_st2_fsm_1 = 42'b10;
parameter    ap_ST_st3_fsm_2 = 42'b100;
parameter    ap_ST_st4_fsm_3 = 42'b1000;
parameter    ap_ST_st5_fsm_4 = 42'b10000;
parameter    ap_ST_st6_fsm_5 = 42'b100000;
parameter    ap_ST_st7_fsm_6 = 42'b1000000;
parameter    ap_ST_st8_fsm_7 = 42'b10000000;
parameter    ap_ST_st9_fsm_8 = 42'b100000000;
parameter    ap_ST_st10_fsm_9 = 42'b1000000000;
parameter    ap_ST_st11_fsm_10 = 42'b10000000000;
parameter    ap_ST_st12_fsm_11 = 42'b100000000000;
parameter    ap_ST_st13_fsm_12 = 42'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 42'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 42'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 42'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 42'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 42'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 42'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 42'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 42'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 42'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 42'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 42'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 42'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 42'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 42'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 42'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 42'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 42'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 42'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 42'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 42'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 42'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 42'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 42'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 42'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 42'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 42'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 42'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 42'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 42'b100000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_28 = 32'b101000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv21_0 = 21'b000000000000000000000;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv4_F = 4'b1111;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv32_42A00000 = 32'b1000010101000000000000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_384D8559 = 32'b111000010011011000010101011001;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv64_4000000000000000 = 64'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_3FB99999A0000000 = 64'b11111110111001100110011001100110100000000000000000000000000000;
parameter    ap_const_lv64_3F565D39A0000000 = 64'b11111101010110010111010011100110100000000000000000000000000000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv11_401 = 11'b10000000001;
parameter    ap_const_lv11_402 = 11'b10000000010;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv21_402 = 21'b10000000010;
parameter    ap_const_lv31_0 = 31'b0000000000000000000000000000000;
parameter    ap_const_lv21_1 = 21'b1;
parameter    ap_const_lv21_404 = 21'b10000000100;
parameter    ap_const_lv11_2 = 11'b10;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_401 = 32'b10000000001;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv2_1 = 2'b1;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] in_stream_0_V_data_V_dout;
input   in_stream_0_V_data_V_empty_n;
output   in_stream_0_V_data_V_read;
input  [3:0] in_stream_0_V_keep_V_dout;
input   in_stream_0_V_keep_V_empty_n;
output   in_stream_0_V_keep_V_read;
input  [3:0] in_stream_0_V_strb_V_dout;
input   in_stream_0_V_strb_V_empty_n;
output   in_stream_0_V_strb_V_read;
input  [3:0] in_stream_0_V_user_V_dout;
input   in_stream_0_V_user_V_empty_n;
output   in_stream_0_V_user_V_read;
input  [0:0] in_stream_0_V_last_V_dout;
input   in_stream_0_V_last_V_empty_n;
output   in_stream_0_V_last_V_read;
input  [4:0] in_stream_0_V_id_V_dout;
input   in_stream_0_V_id_V_empty_n;
output   in_stream_0_V_id_V_read;
input  [4:0] in_stream_0_V_dest_V_dout;
input   in_stream_0_V_dest_V_empty_n;
output   in_stream_0_V_dest_V_read;
input  [31:0] in_stream_1_V_data_V_dout;
input   in_stream_1_V_data_V_empty_n;
output   in_stream_1_V_data_V_read;
input  [3:0] in_stream_1_V_keep_V_dout;
input   in_stream_1_V_keep_V_empty_n;
output   in_stream_1_V_keep_V_read;
input  [3:0] in_stream_1_V_strb_V_dout;
input   in_stream_1_V_strb_V_empty_n;
output   in_stream_1_V_strb_V_read;
input  [3:0] in_stream_1_V_user_V_dout;
input   in_stream_1_V_user_V_empty_n;
output   in_stream_1_V_user_V_read;
input  [0:0] in_stream_1_V_last_V_dout;
input   in_stream_1_V_last_V_empty_n;
output   in_stream_1_V_last_V_read;
input  [4:0] in_stream_1_V_id_V_dout;
input   in_stream_1_V_id_V_empty_n;
output   in_stream_1_V_id_V_read;
input  [4:0] in_stream_1_V_dest_V_dout;
input   in_stream_1_V_dest_V_empty_n;
output   in_stream_1_V_dest_V_read;
output  [31:0] out_stream_V_data_V_din;
input   out_stream_V_data_V_full_n;
output   out_stream_V_data_V_write;
output  [3:0] out_stream_V_keep_V_din;
input   out_stream_V_keep_V_full_n;
output   out_stream_V_keep_V_write;
output  [3:0] out_stream_V_strb_V_din;
input   out_stream_V_strb_V_full_n;
output   out_stream_V_strb_V_write;
output  [3:0] out_stream_V_user_V_din;
input   out_stream_V_user_V_full_n;
output   out_stream_V_user_V_write;
output  [0:0] out_stream_V_last_V_din;
input   out_stream_V_last_V_full_n;
output   out_stream_V_last_V_write;
output  [4:0] out_stream_V_id_V_din;
input   out_stream_V_id_V_full_n;
output   out_stream_V_id_V_write;
output  [4:0] out_stream_V_dest_V_din;
input   out_stream_V_dest_V_full_n;
output   out_stream_V_dest_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm = 42'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_60;
wire   [31:0] grp_fu_499_p2;
reg   [31:0] reg_541;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_156;
reg   [0:0] or_cond3_reg_1049;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_168;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_177;
wire   [63:0] grp_fu_512_p1;
reg   [63:0] reg_547;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_188;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_197;
wire   [63:0] grp_fu_521_p2;
reg   [63:0] reg_553;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_208;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_bdd_217;
wire   [63:0] grp_fu_517_p2;
reg   [63:0] reg_558;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_228;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_238;
reg    ap_sig_cseq_ST_st41_fsm_40;
reg    ap_sig_bdd_247;
wire   [10:0] i_1_fu_591_p2;
reg   [10:0] i_1_reg_937;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_258;
wire   [20:0] countWait_2_fu_597_p2;
reg   [20:0] countWait_2_reg_942;
wire   [0:0] exitcond1_fu_585_p2;
wire   [0:0] grp_fu_528_p2;
reg   [0:0] tmp_1_reg_947;
wire   [10:0] j_1_fu_609_p2;
reg   [10:0] j_1_reg_955;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_274;
wire    in_stream_0_V_id_V0_status;
wire   [0:0] exitcond2_fu_603_p2;
wire   [0:0] tmp_7_fu_627_p2;
wire   [0:0] tmp_11_fu_645_p2;
wire    in_stream_1_V_id_V0_status;
reg    ap_sig_bdd_291;
wire   [0:0] tmp_4_fu_615_p2;
reg   [0:0] tmp_4_reg_960;
wire   [63:0] tmp_9_fu_659_p1;
reg   [63:0] tmp_9_reg_981;
reg   [10:0] lineBuff_val_1_addr_reg_987;
reg   [10:0] lineBuff_val_2_addr_reg_992;
reg   [10:0] lineBuff_power_val_2_addr_reg_997;
wire   [0:0] icmp1_fu_676_p2;
reg   [0:0] icmp1_reg_1002;
wire   [20:0] tmp_s_fu_682_p2;
reg   [20:0] tmp_s_reg_1008;
wire   [0:0] p_not_fu_688_p2;
reg   [0:0] p_not_reg_1013;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_323;
wire   [10:0] tmp_12_fu_707_p1;
reg   [10:0] tmp_12_reg_1023;
wire   [10:0] pixConvolved_1_fu_711_p2;
reg   [10:0] pixConvolved_1_reg_1029;
wire   [0:0] or_cond3_fu_740_p2;
wire   [0:0] brmerge_fu_756_p2;
reg   [0:0] brmerge_reg_1056;
wire   [31:0] lineBuff_val_0_q0;
reg   [31:0] windowTemp_val_0_1_reg_1060;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_345;
wire   [31:0] lineBuff_val_1_q0;
reg   [31:0] windowTemp_val_1_1_reg_1070;
wire   [31:0] lineBuff_val_2_q0;
reg   [31:0] windowTemp_val_2_1_reg_1080;
reg   [63:0] tmp_i_reg_1085;
wire   [10:0] pixConvolved_2_fu_775_p3;
reg   [10:0] pixConvolved_2_reg_1091;
reg   [31:0] windowTemp_val_1_0_reg_1096;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_365;
wire   [31:0] lineBuff_val_1_q1;
reg   [31:0] windowTemp_val_1_2_reg_1101;
reg   [63:0] tmp_23_i_reg_1106;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_376;
reg   [63:0] tmp_24_i_reg_1111;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_385;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_395;
wire   [10:0] pixConvolved_Power_2_fu_798_p3;
reg   [10:0] pixConvolved_Power_2_reg_1121;
wire   [31:0] grp_fu_504_p2;
reg   [31:0] tmp_28_i_reg_1126;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_407;
reg   [10:0] lineBuff_val_0_address0;
reg    lineBuff_val_0_ce0;
reg    lineBuff_val_0_we0;
wire   [31:0] lineBuff_val_0_d0;
reg   [10:0] lineBuff_val_1_address0;
reg    lineBuff_val_1_ce0;
reg    lineBuff_val_1_we0;
wire   [31:0] lineBuff_val_1_d0;
wire   [10:0] lineBuff_val_1_address1;
reg    lineBuff_val_1_ce1;
reg   [10:0] lineBuff_val_2_address0;
reg    lineBuff_val_2_ce0;
reg    lineBuff_val_2_we0;
wire   [31:0] lineBuff_val_2_d0;
reg   [10:0] lineBuff_power_val_1_address0;
reg    lineBuff_power_val_1_ce0;
reg    lineBuff_power_val_1_we0;
wire   [31:0] lineBuff_power_val_1_d0;
wire   [31:0] lineBuff_power_val_1_q0;
reg   [10:0] lineBuff_power_val_2_address0;
reg    lineBuff_power_val_2_ce0;
reg    lineBuff_power_val_2_we0;
wire   [31:0] lineBuff_power_val_2_d0;
wire   [31:0] lineBuff_power_val_2_q0;
wire   [10:0] i_phi_fu_429_p4;
reg   [10:0] i_reg_425;
reg   [20:0] countWait_reg_437;
reg   [10:0] j_reg_449;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_bdd_474;
wire    out_stream_V_id_V1_status;
reg    ap_sig_bdd_480;
reg   [20:0] countWait_1_reg_460;
reg   [31:0] converterB_reg_470;
reg   [31:0] converterA_reg_484;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_504;
wire   [63:0] tmp_23_0_1_fu_717_p1;
wire   [63:0] tmp_6_fu_761_p1;
wire   [63:0] tmp_23_0_2_fu_770_p1;
wire   [63:0] tmp_35_0_1_fu_793_p1;
reg    in_stream_0_V_id_V0_update;
reg    in_stream_1_V_id_V0_update;
reg    out_stream_V_id_V1_update;
reg   [31:0] pixConvolved_Power_fu_220;
wire   [31:0] pixConvolved_Power_3_cast_fu_882_p1;
reg   [31:0] pixConvolved_fu_224;
wire   [31:0] pixConvolved_3_cast_fu_871_p1;
reg   [31:0] idxRow_fu_228;
wire   [31:0] idxRow_2_fu_856_p3;
reg   [31:0] idxCol_fu_232;
wire   [31:0] idxCol_2_cast_fu_852_p1;
reg   [31:0] grp_fu_499_p0;
reg   [31:0] grp_fu_499_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_581;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_588;
wire   [31:0] grp_fu_504_p0;
wire   [31:0] grp_fu_504_p1;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_598;
wire   [63:0] result_fu_509_p0;
reg   [31:0] grp_fu_512_p0;
reg   [63:0] grp_fu_517_p0;
reg   [63:0] grp_fu_517_p1;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_610;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_617;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_625;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_bdd_633;
reg   [63:0] grp_fu_521_p0;
reg   [63:0] grp_fu_521_p1;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_649;
reg   [10:0] grp_fu_528_p0;
wire   [0:0] tmp_5_fu_621_p2;
wire   [0:0] tmp_10_fu_639_p2;
wire   [0:0] tmp_8_fu_633_p2;
wire   [30:0] tmp_17_fu_666_p4;
wire   [30:0] tmp_16_fu_724_p4;
wire   [0:0] icmp_fu_734_p2;
wire   [0:0] or_cond82_not_demorgan_fu_745_p2;
wire   [0:0] or_cond82_not_fu_750_p2;
wire   [10:0] col_assign_1_0_2_fu_765_p2;
wire   [10:0] tmp_15_fu_783_p1;
wire   [10:0] pixConvolved_Power_1_fu_787_p2;
wire   [31:0] result_fu_509_p1;
wire   [31:0] tmp_fu_805_p1;
wire   [10:0] tmp_18_fu_828_p1;
wire   [0:0] tmp_13_fu_822_p2;
wire   [10:0] idxCol_1_fu_832_p2;
wire   [10:0] idxCol_2_fu_844_p3;
wire   [31:0] idxRow_1_fu_838_p2;
wire   [10:0] pixConvolved_3_fu_864_p3;
wire   [10:0] pixConvolved_Power_3_fu_875_p3;
reg   [1:0] grp_fu_499_opcode;
wire    grp_fu_499_ce;
wire    grp_fu_504_ce;
reg   [1:0] grp_fu_517_opcode;
wire    grp_fu_517_ce;
wire    grp_fu_521_ce;
reg   [41:0] ap_NS_fsm;


hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_val_0_address0 ),
    .ce0( lineBuff_val_0_ce0 ),
    .we0( lineBuff_val_0_we0 ),
    .d0( lineBuff_val_0_d0 ),
    .q0( lineBuff_val_0_q0 )
);

hls_hotspot_func_hls_lineBuff_val_1 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_val_1_address0 ),
    .ce0( lineBuff_val_1_ce0 ),
    .we0( lineBuff_val_1_we0 ),
    .d0( lineBuff_val_1_d0 ),
    .q0( lineBuff_val_1_q0 ),
    .address1( lineBuff_val_1_address1 ),
    .ce1( lineBuff_val_1_ce1 ),
    .q1( lineBuff_val_1_q1 )
);

hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_val_2_address0 ),
    .ce0( lineBuff_val_2_ce0 ),
    .we0( lineBuff_val_2_we0 ),
    .d0( lineBuff_val_2_d0 ),
    .q0( lineBuff_val_2_q0 )
);

hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_power_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_power_val_1_address0 ),
    .ce0( lineBuff_power_val_1_ce0 ),
    .we0( lineBuff_power_val_1_we0 ),
    .d0( lineBuff_power_val_1_d0 ),
    .q0( lineBuff_power_val_1_q0 )
);

hls_hotspot_func_hls_lineBuff_val_0 #(
    .DataWidth( 32 ),
    .AddressRange( 1026 ),
    .AddressWidth( 11 ))
lineBuff_power_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( lineBuff_power_val_2_address0 ),
    .ce0( lineBuff_power_val_2_ce0 ),
    .we0( lineBuff_power_val_2_we0 ),
    .d0( lineBuff_power_val_2_d0 ),
    .q0( lineBuff_power_val_2_q0 )
);

hls_hotspot_faddfsub_32ns_32ns_32_4_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_hotspot_faddfsub_32ns_32ns_32_4_full_dsp_U0(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_499_p0 ),
    .din1( grp_fu_499_p1 ),
    .opcode( grp_fu_499_opcode ),
    .ce( grp_fu_499_ce ),
    .dout( grp_fu_499_p2 )
);

hls_hotspot_fmul_32ns_32ns_32_2_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
hls_hotspot_fmul_32ns_32ns_32_2_max_dsp_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_504_p0 ),
    .din1( grp_fu_504_p1 ),
    .ce( grp_fu_504_ce ),
    .dout( grp_fu_504_p2 )
);

hls_hotspot_fptrunc_64ns_32_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
hls_hotspot_fptrunc_64ns_32_1_U2(
    .din0( result_fu_509_p0 ),
    .dout( result_fu_509_p1 )
);

hls_hotspot_fpext_32ns_64_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
hls_hotspot_fpext_32ns_64_1_U3(
    .din0( grp_fu_512_p0 ),
    .dout( grp_fu_512_p1 )
);

hls_hotspot_dadddsub_64ns_64ns_64_4_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_hotspot_dadddsub_64ns_64ns_64_4_full_dsp_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_517_p0 ),
    .din1( grp_fu_517_p1 ),
    .opcode( grp_fu_517_opcode ),
    .ce( grp_fu_517_ce ),
    .dout( grp_fu_517_p2 )
);

hls_hotspot_dmul_64ns_64ns_64_5_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
hls_hotspot_dmul_64ns_64ns_64_5_max_dsp_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_521_p0 ),
    .din1( grp_fu_521_p1 ),
    .ce( grp_fu_521_ce ),
    .dout( grp_fu_521_p2 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & ~ap_sig_bdd_291 & ~(ap_const_lv1_0 == tmp_7_fu_627_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & ~ap_sig_bdd_291 & ~(ap_const_lv1_0 == tmp_11_fu_645_p2)))) begin
        converterA_reg_484 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & (ap_const_lv1_0 == tmp_11_fu_645_p2) & ~ap_sig_bdd_291)) begin
        converterA_reg_484 <= in_stream_0_V_data_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & ~ap_sig_bdd_291 & ~(ap_const_lv1_0 == tmp_7_fu_627_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & ~ap_sig_bdd_291 & ~(ap_const_lv1_0 == tmp_11_fu_645_p2)))) begin
        converterB_reg_470 <= ap_const_lv32_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & (ap_const_lv1_0 == tmp_11_fu_645_p2) & ~ap_sig_bdd_291)) begin
        converterB_reg_470 <= in_stream_1_V_data_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~ap_sig_bdd_480)) begin
        countWait_1_reg_460 <= tmp_s_reg_1008;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_585_p2))) begin
        countWait_1_reg_460 <= countWait_reg_437;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_291 & ~(ap_const_lv1_0 == exitcond2_fu_603_p2))) begin
        countWait_reg_437 <= countWait_2_reg_942;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        countWait_reg_437 <= ap_const_lv21_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_291 & ~(ap_const_lv1_0 == exitcond2_fu_603_p2))) begin
        i_reg_425 <= i_1_reg_937;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        i_reg_425 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~ap_sig_bdd_480)) begin
        idxCol_fu_232[0] <= idxCol_2_cast_fu_852_p1[0];
        idxCol_fu_232[1] <= idxCol_2_cast_fu_852_p1[1];
        idxCol_fu_232[2] <= idxCol_2_cast_fu_852_p1[2];
        idxCol_fu_232[3] <= idxCol_2_cast_fu_852_p1[3];
        idxCol_fu_232[4] <= idxCol_2_cast_fu_852_p1[4];
        idxCol_fu_232[5] <= idxCol_2_cast_fu_852_p1[5];
        idxCol_fu_232[6] <= idxCol_2_cast_fu_852_p1[6];
        idxCol_fu_232[7] <= idxCol_2_cast_fu_852_p1[7];
        idxCol_fu_232[8] <= idxCol_2_cast_fu_852_p1[8];
        idxCol_fu_232[9] <= idxCol_2_cast_fu_852_p1[9];
        idxCol_fu_232[10] <= idxCol_2_cast_fu_852_p1[10];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        idxCol_fu_232[0] <= 1'b0;
        idxCol_fu_232[1] <= 1'b0;
        idxCol_fu_232[2] <= 1'b0;
        idxCol_fu_232[3] <= 1'b0;
        idxCol_fu_232[4] <= 1'b0;
        idxCol_fu_232[5] <= 1'b0;
        idxCol_fu_232[6] <= 1'b0;
        idxCol_fu_232[7] <= 1'b0;
        idxCol_fu_232[8] <= 1'b0;
        idxCol_fu_232[9] <= 1'b0;
        idxCol_fu_232[10] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~ap_sig_bdd_480)) begin
        idxRow_fu_228 <= idxRow_2_fu_856_p3;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        idxRow_fu_228 <= ap_const_lv32_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~ap_sig_bdd_480)) begin
        j_reg_449 <= j_1_reg_955;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_585_p2))) begin
        j_reg_449 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~ap_sig_bdd_480)) begin
        pixConvolved_Power_fu_220[0] <= pixConvolved_Power_3_cast_fu_882_p1[0];
        pixConvolved_Power_fu_220[1] <= pixConvolved_Power_3_cast_fu_882_p1[1];
        pixConvolved_Power_fu_220[2] <= pixConvolved_Power_3_cast_fu_882_p1[2];
        pixConvolved_Power_fu_220[3] <= pixConvolved_Power_3_cast_fu_882_p1[3];
        pixConvolved_Power_fu_220[4] <= pixConvolved_Power_3_cast_fu_882_p1[4];
        pixConvolved_Power_fu_220[5] <= pixConvolved_Power_3_cast_fu_882_p1[5];
        pixConvolved_Power_fu_220[6] <= pixConvolved_Power_3_cast_fu_882_p1[6];
        pixConvolved_Power_fu_220[7] <= pixConvolved_Power_3_cast_fu_882_p1[7];
        pixConvolved_Power_fu_220[8] <= pixConvolved_Power_3_cast_fu_882_p1[8];
        pixConvolved_Power_fu_220[9] <= pixConvolved_Power_3_cast_fu_882_p1[9];
        pixConvolved_Power_fu_220[10] <= pixConvolved_Power_3_cast_fu_882_p1[10];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        pixConvolved_Power_fu_220[0] <= 1'b0;
        pixConvolved_Power_fu_220[1] <= 1'b0;
        pixConvolved_Power_fu_220[2] <= 1'b0;
        pixConvolved_Power_fu_220[3] <= 1'b0;
        pixConvolved_Power_fu_220[4] <= 1'b0;
        pixConvolved_Power_fu_220[5] <= 1'b0;
        pixConvolved_Power_fu_220[6] <= 1'b0;
        pixConvolved_Power_fu_220[7] <= 1'b0;
        pixConvolved_Power_fu_220[8] <= 1'b0;
        pixConvolved_Power_fu_220[9] <= 1'b0;
        pixConvolved_Power_fu_220[10] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & ~ap_sig_bdd_480)) begin
        pixConvolved_fu_224[0] <= pixConvolved_3_cast_fu_871_p1[0];
        pixConvolved_fu_224[1] <= pixConvolved_3_cast_fu_871_p1[1];
        pixConvolved_fu_224[2] <= pixConvolved_3_cast_fu_871_p1[2];
        pixConvolved_fu_224[3] <= pixConvolved_3_cast_fu_871_p1[3];
        pixConvolved_fu_224[4] <= pixConvolved_3_cast_fu_871_p1[4];
        pixConvolved_fu_224[5] <= pixConvolved_3_cast_fu_871_p1[5];
        pixConvolved_fu_224[6] <= pixConvolved_3_cast_fu_871_p1[6];
        pixConvolved_fu_224[7] <= pixConvolved_3_cast_fu_871_p1[7];
        pixConvolved_fu_224[8] <= pixConvolved_3_cast_fu_871_p1[8];
        pixConvolved_fu_224[9] <= pixConvolved_3_cast_fu_871_p1[9];
        pixConvolved_fu_224[10] <= pixConvolved_3_cast_fu_871_p1[10];
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        pixConvolved_fu_224[0] <= 1'b0;
        pixConvolved_fu_224[1] <= 1'b0;
        pixConvolved_fu_224[2] <= 1'b0;
        pixConvolved_fu_224[3] <= 1'b0;
        pixConvolved_fu_224[4] <= 1'b0;
        pixConvolved_fu_224[5] <= 1'b0;
        pixConvolved_fu_224[6] <= 1'b0;
        pixConvolved_fu_224[7] <= 1'b0;
        pixConvolved_fu_224[8] <= 1'b0;
        pixConvolved_fu_224[9] <= 1'b0;
        pixConvolved_fu_224[10] <= 1'b0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        brmerge_reg_1056 <= brmerge_fu_756_p2;
        or_cond3_reg_1049 <= or_cond3_fu_740_p2;
        pixConvolved_1_reg_1029 <= pixConvolved_1_fu_711_p2;
        tmp_12_reg_1023 <= tmp_12_fu_707_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_585_p2))) begin
        countWait_2_reg_942 <= countWait_2_fu_597_p2;
        tmp_1_reg_947 <= grp_fu_528_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_937 <= i_1_fu_591_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & ~ap_sig_bdd_291)) begin
        icmp1_reg_1002 <= icmp1_fu_676_p2;
        lineBuff_power_val_2_addr_reg_997 <= tmp_9_fu_659_p1;
        lineBuff_val_1_addr_reg_987 <= tmp_9_fu_659_p1;
        lineBuff_val_2_addr_reg_992 <= tmp_9_fu_659_p1;
        p_not_reg_1013 <= p_not_fu_688_p2;
        tmp_4_reg_960 <= tmp_4_fu_615_p2;
        tmp_9_reg_981[0] <= tmp_9_fu_659_p1[0];
tmp_9_reg_981[1] <= tmp_9_fu_659_p1[1];
tmp_9_reg_981[2] <= tmp_9_fu_659_p1[2];
tmp_9_reg_981[3] <= tmp_9_fu_659_p1[3];
tmp_9_reg_981[4] <= tmp_9_fu_659_p1[4];
tmp_9_reg_981[5] <= tmp_9_fu_659_p1[5];
tmp_9_reg_981[6] <= tmp_9_fu_659_p1[6];
tmp_9_reg_981[7] <= tmp_9_fu_659_p1[7];
tmp_9_reg_981[8] <= tmp_9_fu_659_p1[8];
tmp_9_reg_981[9] <= tmp_9_fu_659_p1[9];
tmp_9_reg_981[10] <= tmp_9_fu_659_p1[10];
        tmp_s_reg_1008 <= tmp_s_fu_682_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_291)) begin
        j_1_reg_955 <= j_1_fu_609_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        pixConvolved_2_reg_1091 <= pixConvolved_2_fu_775_p3;
        windowTemp_val_0_1_reg_1060 <= lineBuff_val_0_q0;
        windowTemp_val_1_1_reg_1070 <= lineBuff_val_1_q0;
        windowTemp_val_2_1_reg_1080 <= lineBuff_val_2_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        pixConvolved_Power_2_reg_1121 <= pixConvolved_Power_2_fu_798_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) & ~(or_cond3_reg_1049 == ap_const_lv1_0)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)))) begin
        reg_541 <= grp_fu_499_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)))) begin
        reg_547 <= grp_fu_512_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st37_fsm_36)))) begin
        reg_553 <= grp_fu_521_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st41_fsm_40)))) begin
        reg_558 <= grp_fu_517_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        tmp_23_i_reg_1106 <= grp_fu_512_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        tmp_24_i_reg_1111 <= grp_fu_517_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26))) begin
        tmp_28_i_reg_1126 <= grp_fu_504_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        tmp_i_reg_1085 <= grp_fu_512_p1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        windowTemp_val_1_0_reg_1096 <= lineBuff_val_1_q0;
        windowTemp_val_1_2_reg_1101 <= lineBuff_val_1_q1;
    end
end

/// ap_done assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_585_p2)
begin
    if (((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_585_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or exitcond1_fu_585_p2)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_585_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st10_fsm_9 assign process. ///
always @ (ap_sig_bdd_156)
begin
    if (ap_sig_bdd_156) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st11_fsm_10 assign process. ///
always @ (ap_sig_bdd_168)
begin
    if (ap_sig_bdd_168) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st12_fsm_11 assign process. ///
always @ (ap_sig_bdd_376)
begin
    if (ap_sig_bdd_376) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st13_fsm_12 assign process. ///
always @ (ap_sig_bdd_610)
begin
    if (ap_sig_bdd_610) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st15_fsm_14 assign process. ///
always @ (ap_sig_bdd_228)
begin
    if (ap_sig_bdd_228) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st16_fsm_15 assign process. ///
always @ (ap_sig_bdd_385)
begin
    if (ap_sig_bdd_385) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st19_fsm_18 assign process. ///
always @ (ap_sig_bdd_395)
begin
    if (ap_sig_bdd_395) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_60)
begin
    if (ap_sig_bdd_60) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st20_fsm_19 assign process. ///
always @ (ap_sig_bdd_188)
begin
    if (ap_sig_bdd_188) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st21_fsm_20 assign process. ///
always @ (ap_sig_bdd_617)
begin
    if (ap_sig_bdd_617) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st22_fsm_21 assign process. ///
always @ (ap_sig_bdd_588)
begin
    if (ap_sig_bdd_588) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st24_fsm_23 assign process. ///
always @ (ap_sig_bdd_208)
begin
    if (ap_sig_bdd_208) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st25_fsm_24 assign process. ///
always @ (ap_sig_bdd_177)
begin
    if (ap_sig_bdd_177) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st26_fsm_25 assign process. ///
always @ (ap_sig_bdd_598)
begin
    if (ap_sig_bdd_598) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st27_fsm_26 assign process. ///
always @ (ap_sig_bdd_407)
begin
    if (ap_sig_bdd_407) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st28_fsm_27 assign process. ///
always @ (ap_sig_bdd_197)
begin
    if (ap_sig_bdd_197) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st29_fsm_28 assign process. ///
always @ (ap_sig_bdd_625)
begin
    if (ap_sig_bdd_625) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_258)
begin
    if (ap_sig_bdd_258) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st32_fsm_31 assign process. ///
always @ (ap_sig_bdd_238)
begin
    if (ap_sig_bdd_238) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st33_fsm_32 assign process. ///
always @ (ap_sig_bdd_649)
begin
    if (ap_sig_bdd_649) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st37_fsm_36 assign process. ///
always @ (ap_sig_bdd_217)
begin
    if (ap_sig_bdd_217) begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st38_fsm_37 assign process. ///
always @ (ap_sig_bdd_633)
begin
    if (ap_sig_bdd_633) begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_274)
begin
    if (ap_sig_bdd_274) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st41_fsm_40 assign process. ///
always @ (ap_sig_bdd_247)
begin
    if (ap_sig_bdd_247) begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st41_fsm_40 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st42_fsm_41 assign process. ///
always @ (ap_sig_bdd_474)
begin
    if (ap_sig_bdd_474) begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_504)
begin
    if (ap_sig_bdd_504) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st5_fsm_4 assign process. ///
always @ (ap_sig_bdd_323)
begin
    if (ap_sig_bdd_323) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st6_fsm_5 assign process. ///
always @ (ap_sig_bdd_345)
begin
    if (ap_sig_bdd_345) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_6 assign process. ///
always @ (ap_sig_bdd_365)
begin
    if (ap_sig_bdd_365) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_7 assign process. ///
always @ (ap_sig_bdd_581)
begin
    if (ap_sig_bdd_581) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

/// grp_fu_499_opcode assign process. ///
always @ (or_cond3_reg_1049 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        grp_fu_499_opcode = ap_const_lv2_1;
    end else if (((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)))) begin
        grp_fu_499_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_499_opcode = 'bx;
    end
end

/// grp_fu_499_p0 assign process. ///
always @ (windowTemp_val_2_1_reg_1080 or ap_sig_cseq_ST_st7_fsm_6 or windowTemp_val_1_2_reg_1101 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_499_p0 = ap_const_lv32_42A00000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_499_p0 = windowTemp_val_1_2_reg_1101;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_499_p0 = windowTemp_val_2_1_reg_1080;
    end else begin
        grp_fu_499_p0 = 'bx;
    end
end

/// grp_fu_499_p1 assign process. ///
always @ (windowTemp_val_0_1_reg_1060 or windowTemp_val_1_1_reg_1070 or windowTemp_val_1_0_reg_1096 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st22_fsm_21)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_499_p1 = windowTemp_val_1_1_reg_1070;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        grp_fu_499_p1 = windowTemp_val_1_0_reg_1096;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_499_p1 = windowTemp_val_0_1_reg_1060;
    end else begin
        grp_fu_499_p1 = 'bx;
    end
end

/// grp_fu_512_p0 assign process. ///
always @ (reg_541 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st6_fsm_5 or lineBuff_val_1_q0 or ap_sig_cseq_ST_st12_fsm_11 or tmp_28_i_reg_1126 or lineBuff_power_val_1_q0)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        grp_fu_512_p0 = tmp_28_i_reg_1126;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_512_p0 = lineBuff_power_val_1_q0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        grp_fu_512_p0 = reg_541;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        grp_fu_512_p0 = lineBuff_val_1_q0;
    end else begin
        grp_fu_512_p0 = 'bx;
    end
end

/// grp_fu_517_opcode assign process. ///
always @ (or_cond3_reg_1049 or ap_sig_cseq_ST_st25_fsm_24 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st38_fsm_37)
begin
    if (((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)))) begin
        grp_fu_517_opcode = ap_const_lv2_1;
    end else if (((~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) | (~(or_cond3_reg_1049 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)))) begin
        grp_fu_517_opcode = ap_const_lv2_0;
    end else begin
        grp_fu_517_opcode = 'bx;
    end
end

/// grp_fu_517_p0 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or reg_547 or reg_558 or tmp_i_reg_1085 or tmp_23_i_reg_1106 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st38_fsm_37)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_517_p0 = tmp_i_reg_1085;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28))) begin
        grp_fu_517_p0 = reg_558;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        grp_fu_517_p0 = tmp_23_i_reg_1106;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20))) begin
        grp_fu_517_p0 = reg_547;
    end else begin
        grp_fu_517_p0 = 'bx;
    end
end

/// grp_fu_517_p1 assign process. ///
always @ (ap_sig_cseq_ST_st25_fsm_24 or reg_547 or reg_553 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st38_fsm_37)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        grp_fu_517_p1 = reg_547;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st38_fsm_37))) begin
        grp_fu_517_p1 = reg_553;
    end else begin
        grp_fu_517_p1 = 'bx;
    end
end

/// grp_fu_521_p0 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19 or reg_558 or tmp_i_reg_1085 or ap_sig_cseq_ST_st7_fsm_6 or tmp_24_i_reg_1111 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st33_fsm_32)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        grp_fu_521_p0 = tmp_24_i_reg_1111;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        grp_fu_521_p0 = reg_558;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_521_p0 = tmp_i_reg_1085;
    end else begin
        grp_fu_521_p0 = 'bx;
    end
end

/// grp_fu_521_p1 assign process. ///
always @ (ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st33_fsm_32)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        grp_fu_521_p1 = ap_const_lv64_3F565D39A0000000;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        grp_fu_521_p1 = ap_const_lv64_3FB99999A0000000;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        grp_fu_521_p1 = ap_const_lv64_4000000000000000;
    end else begin
        grp_fu_521_p1 = 'bx;
    end
end

/// grp_fu_528_p0 assign process. ///
always @ (ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st3_fsm_2 or i_phi_fu_429_p4 or i_reg_425)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        grp_fu_528_p0 = i_reg_425;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        grp_fu_528_p0 = i_phi_fu_429_p4;
    end else begin
        grp_fu_528_p0 = 'bx;
    end
end

/// in_stream_0_V_id_V0_update assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond2_fu_603_p2 or tmp_7_fu_627_p2 or tmp_11_fu_645_p2 or ap_sig_bdd_291)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & (ap_const_lv1_0 == tmp_11_fu_645_p2) & ~ap_sig_bdd_291)) begin
        in_stream_0_V_id_V0_update = ap_const_logic_1;
    end else begin
        in_stream_0_V_id_V0_update = ap_const_logic_0;
    end
end

/// in_stream_1_V_id_V0_update assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or exitcond2_fu_603_p2 or tmp_7_fu_627_p2 or tmp_11_fu_645_p2 or ap_sig_bdd_291)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & (ap_const_lv1_0 == tmp_11_fu_645_p2) & ~ap_sig_bdd_291)) begin
        in_stream_1_V_id_V0_update = ap_const_logic_1;
    end else begin
        in_stream_1_V_id_V0_update = ap_const_logic_0;
    end
end

/// lineBuff_power_val_1_address0 assign process. ///
always @ (tmp_9_reg_981 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st4_fsm_3 or tmp_35_0_1_fu_793_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_1_address0 = tmp_9_reg_981;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        lineBuff_power_val_1_address0 = tmp_35_0_1_fu_793_p1;
    end else begin
        lineBuff_power_val_1_address0 = 'bx;
    end
end

/// lineBuff_power_val_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        lineBuff_power_val_1_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_1_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_power_val_1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_1_we0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_1_we0 = ap_const_logic_0;
    end
end

/// lineBuff_power_val_2_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_9_fu_659_p1 or lineBuff_power_val_2_addr_reg_997 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_2_address0 = lineBuff_power_val_2_addr_reg_997;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lineBuff_power_val_2_address0 = tmp_9_fu_659_p1;
    end else begin
        lineBuff_power_val_2_address0 = 'bx;
    end
end

/// lineBuff_power_val_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_291 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_291) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        lineBuff_power_val_2_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_2_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_power_val_2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_power_val_2_we0 = ap_const_logic_1;
    end else begin
        lineBuff_power_val_2_we0 = ap_const_logic_0;
    end
end

/// lineBuff_val_0_address0 assign process. ///
always @ (tmp_9_reg_981 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or tmp_23_0_1_fu_717_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_0_address0 = tmp_9_reg_981;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_0_address0 = tmp_23_0_1_fu_717_p1;
    end else begin
        lineBuff_val_0_address0 = 'bx;
    end
end

/// lineBuff_val_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        lineBuff_val_0_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_val_0_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_0_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_0_we0 = ap_const_logic_0;
    end
end

/// lineBuff_val_1_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_9_fu_659_p1 or lineBuff_val_1_addr_reg_987 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st4_fsm_3 or tmp_23_0_1_fu_717_p1 or tmp_6_fu_761_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_1_address0 = lineBuff_val_1_addr_reg_987;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        lineBuff_val_1_address0 = tmp_6_fu_761_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_1_address0 = tmp_23_0_1_fu_717_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lineBuff_val_1_address0 = tmp_9_fu_659_p1;
    end else begin
        lineBuff_val_1_address0 = 'bx;
    end
end

/// lineBuff_val_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_291 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_291) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        lineBuff_val_1_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_val_1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_st6_fsm_5)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        lineBuff_val_1_ce1 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_ce1 = ap_const_logic_0;
    end
end

/// lineBuff_val_1_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_1_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_1_we0 = ap_const_logic_0;
    end
end

/// lineBuff_val_2_address0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or tmp_9_fu_659_p1 or lineBuff_val_2_addr_reg_992 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3 or tmp_23_0_1_fu_717_p1)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_2_address0 = lineBuff_val_2_addr_reg_992;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        lineBuff_val_2_address0 = tmp_23_0_1_fu_717_p1;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        lineBuff_val_2_address0 = tmp_9_fu_659_p1;
    end else begin
        lineBuff_val_2_address0 = 'bx;
    end
end

/// lineBuff_val_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_st3_fsm_2 or ap_sig_bdd_291 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_bdd_291) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        lineBuff_val_2_ce0 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_ce0 = ap_const_logic_0;
    end
end

/// lineBuff_val_2_we0 assign process. ///
always @ (ap_sig_cseq_ST_st4_fsm_3)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        lineBuff_val_2_we0 = ap_const_logic_1;
    end else begin
        lineBuff_val_2_we0 = ap_const_logic_0;
    end
end

/// out_stream_V_id_V1_update assign process. ///
always @ (brmerge_reg_1056 or ap_sig_cseq_ST_st42_fsm_41 or ap_sig_bdd_480)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st42_fsm_41) & (ap_const_lv1_0 == brmerge_reg_1056) & ~ap_sig_bdd_480)) begin
        out_stream_V_id_V1_update = ap_const_logic_1;
    end else begin
        out_stream_V_id_V1_update = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_start or ap_CS_fsm or exitcond1_fu_585_p2 or exitcond2_fu_603_p2 or ap_sig_bdd_291 or ap_sig_bdd_480)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_585_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            if ((~ap_sig_bdd_291 & ~(ap_const_lv1_0 == exitcond2_fu_603_p2))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if (((ap_const_lv1_0 == exitcond2_fu_603_p2) & ~ap_sig_bdd_291)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : 
        begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : 
        begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : 
        begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : 
        begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : 
        begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : 
        begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : 
        begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : 
        begin
            if (~ap_sig_bdd_480) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st42_fsm_41;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_156 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_156 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

/// ap_sig_bdd_168 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_168 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end

/// ap_sig_bdd_177 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_177 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end

/// ap_sig_bdd_188 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_188 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end

/// ap_sig_bdd_197 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_197 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end

/// ap_sig_bdd_208 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_208 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end

/// ap_sig_bdd_217 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_217 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_24]);
end

/// ap_sig_bdd_228 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_228 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end

/// ap_sig_bdd_238 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_238 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end

/// ap_sig_bdd_247 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_247 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_28]);
end

/// ap_sig_bdd_258 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_258 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_274 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_274 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_291 assign process. ///
always @ (in_stream_0_V_id_V0_status or exitcond2_fu_603_p2 or tmp_7_fu_627_p2 or tmp_11_fu_645_p2 or in_stream_1_V_id_V0_status)
begin
    ap_sig_bdd_291 = (((in_stream_0_V_id_V0_status == ap_const_logic_0) & (ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & (ap_const_lv1_0 == tmp_11_fu_645_p2)) | ((ap_const_lv1_0 == exitcond2_fu_603_p2) & (ap_const_lv1_0 == tmp_7_fu_627_p2) & (ap_const_lv1_0 == tmp_11_fu_645_p2) & (in_stream_1_V_id_V0_status == ap_const_logic_0)));
end

/// ap_sig_bdd_323 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_323 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_345 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_345 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_365 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_365 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_376 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_376 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end

/// ap_sig_bdd_385 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_385 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end

/// ap_sig_bdd_395 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_395 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end

/// ap_sig_bdd_407 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_407 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end

/// ap_sig_bdd_474 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_474 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_29]);
end

/// ap_sig_bdd_480 assign process. ///
always @ (brmerge_reg_1056 or out_stream_V_id_V1_status)
begin
    ap_sig_bdd_480 = ((out_stream_V_id_V1_status == ap_const_logic_0) & (ap_const_lv1_0 == brmerge_reg_1056));
end

/// ap_sig_bdd_504 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_504 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_581 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_581 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end

/// ap_sig_bdd_588 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_588 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end

/// ap_sig_bdd_598 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_598 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end

/// ap_sig_bdd_60 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_60 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_610 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_610 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end

/// ap_sig_bdd_617 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_617 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end

/// ap_sig_bdd_625 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_625 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end

/// ap_sig_bdd_633 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_633 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_25]);
end

/// ap_sig_bdd_649 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_649 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end
assign brmerge_fu_756_p2 = (p_not_reg_1013 | or_cond82_not_fu_750_p2);
assign col_assign_1_0_2_fu_765_p2 = (tmp_12_reg_1023 + ap_const_lv11_2);
assign countWait_2_fu_597_p2 = (countWait_reg_437 + ap_const_lv21_402);
assign exitcond1_fu_585_p2 = (i_reg_425 == ap_const_lv11_402? 1'b1: 1'b0);
assign exitcond2_fu_603_p2 = (j_reg_449 == ap_const_lv11_402? 1'b1: 1'b0);
assign grp_fu_499_ce = ap_const_logic_1;
assign grp_fu_504_ce = ap_const_logic_1;
assign grp_fu_504_p0 = reg_541;
assign grp_fu_504_p1 = ap_const_lv32_384D8559;
assign grp_fu_517_ce = ap_const_logic_1;
assign grp_fu_521_ce = ap_const_logic_1;
assign grp_fu_528_p2 = (grp_fu_528_p0 == ap_const_lv11_401? 1'b1: 1'b0);
assign i_1_fu_591_p2 = (i_reg_425 + ap_const_lv11_1);
assign i_phi_fu_429_p4 = i_reg_425;
assign icmp1_fu_676_p2 = ($signed(tmp_17_fu_666_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign icmp_fu_734_p2 = ($signed(tmp_16_fu_724_p4) > $signed(31'b0000000000000000000000000000000)? 1'b1: 1'b0);
assign idxCol_1_fu_832_p2 = (tmp_18_fu_828_p1 + ap_const_lv11_1);
assign idxCol_2_cast_fu_852_p1 = idxCol_2_fu_844_p3;
assign idxCol_2_fu_844_p3 = ((tmp_13_fu_822_p2)? idxCol_1_fu_832_p2: ap_const_lv11_0);
assign idxRow_1_fu_838_p2 = (idxRow_fu_228 + ap_const_lv32_1);
assign idxRow_2_fu_856_p3 = ((tmp_13_fu_822_p2)? idxRow_fu_228: idxRow_1_fu_838_p2);
assign in_stream_0_V_data_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_dest_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_id_V0_status = (in_stream_0_V_data_V_empty_n & in_stream_0_V_keep_V_empty_n & in_stream_0_V_strb_V_empty_n & in_stream_0_V_user_V_empty_n & in_stream_0_V_last_V_empty_n & in_stream_0_V_id_V_empty_n & in_stream_0_V_dest_V_empty_n);
assign in_stream_0_V_id_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_keep_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_last_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_strb_V_read = in_stream_0_V_id_V0_update;
assign in_stream_0_V_user_V_read = in_stream_0_V_id_V0_update;
assign in_stream_1_V_data_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_dest_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_id_V0_status = (in_stream_1_V_data_V_empty_n & in_stream_1_V_keep_V_empty_n & in_stream_1_V_strb_V_empty_n & in_stream_1_V_user_V_empty_n & in_stream_1_V_last_V_empty_n & in_stream_1_V_id_V_empty_n & in_stream_1_V_dest_V_empty_n);
assign in_stream_1_V_id_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_keep_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_last_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_strb_V_read = in_stream_1_V_id_V0_update;
assign in_stream_1_V_user_V_read = in_stream_1_V_id_V0_update;
assign j_1_fu_609_p2 = (j_reg_449 + ap_const_lv11_1);
assign lineBuff_power_val_1_d0 = lineBuff_power_val_2_q0;
assign lineBuff_power_val_2_d0 = converterB_reg_470;
assign lineBuff_val_0_d0 = lineBuff_val_1_q0;
assign lineBuff_val_1_address1 = tmp_23_0_2_fu_770_p1;
assign lineBuff_val_1_d0 = lineBuff_val_2_q0;
assign lineBuff_val_2_d0 = converterA_reg_484;
assign or_cond3_fu_740_p2 = (icmp_fu_734_p2 & icmp1_reg_1002);
assign or_cond82_not_demorgan_fu_745_p2 = (icmp_fu_734_p2 & icmp1_reg_1002);
assign or_cond82_not_fu_750_p2 = (or_cond82_not_demorgan_fu_745_p2 ^ ap_const_lv1_1);
assign out_stream_V_data_V_din = ((or_cond3_reg_1049)? tmp_fu_805_p1: ap_const_lv32_3F800000);
assign out_stream_V_data_V_write = out_stream_V_id_V1_update;
assign out_stream_V_dest_V_din = ap_const_lv5_0;
assign out_stream_V_dest_V_write = out_stream_V_id_V1_update;
assign out_stream_V_id_V1_status = (out_stream_V_data_V_full_n & out_stream_V_keep_V_full_n & out_stream_V_strb_V_full_n & out_stream_V_user_V_full_n & out_stream_V_last_V_full_n & out_stream_V_id_V_full_n & out_stream_V_dest_V_full_n);
assign out_stream_V_id_V_din = ap_const_lv5_0;
assign out_stream_V_id_V_write = out_stream_V_id_V1_update;
assign out_stream_V_keep_V_din = ap_const_lv4_F;
assign out_stream_V_keep_V_write = out_stream_V_id_V1_update;
assign out_stream_V_last_V_din = (tmp_1_reg_947 & tmp_4_reg_960);
assign out_stream_V_last_V_write = out_stream_V_id_V1_update;
assign out_stream_V_strb_V_din = ap_const_lv4_F;
assign out_stream_V_strb_V_write = out_stream_V_id_V1_update;
assign out_stream_V_user_V_din = ap_const_lv4_0;
assign out_stream_V_user_V_write = out_stream_V_id_V1_update;
assign p_not_fu_688_p2 = (tmp_s_fu_682_p2 < ap_const_lv21_404? 1'b1: 1'b0);
assign pixConvolved_1_fu_711_p2 = (tmp_12_fu_707_p1 + ap_const_lv11_1);
assign pixConvolved_2_fu_775_p3 = ((or_cond3_reg_1049)? pixConvolved_1_reg_1029: tmp_12_reg_1023);
assign pixConvolved_3_cast_fu_871_p1 = pixConvolved_3_fu_864_p3;
assign pixConvolved_3_fu_864_p3 = ((tmp_13_fu_822_p2)? pixConvolved_2_reg_1091: ap_const_lv11_0);
assign pixConvolved_Power_1_fu_787_p2 = (tmp_15_fu_783_p1 + ap_const_lv11_1);
assign pixConvolved_Power_2_fu_798_p3 = ((or_cond3_reg_1049)? pixConvolved_Power_1_fu_787_p2: tmp_15_fu_783_p1);
assign pixConvolved_Power_3_cast_fu_882_p1 = pixConvolved_Power_3_fu_875_p3;
assign pixConvolved_Power_3_fu_875_p3 = ((tmp_13_fu_822_p2)? pixConvolved_Power_2_reg_1121: ap_const_lv11_0);
assign result_fu_509_p0 = reg_558;
assign tmp_10_fu_639_p2 = (j_reg_449 == ap_const_lv11_0? 1'b1: 1'b0);
assign tmp_11_fu_645_p2 = (tmp_10_fu_639_p2 | tmp_8_fu_633_p2);
assign tmp_12_fu_707_p1 = pixConvolved_fu_224[10:0];
assign tmp_13_fu_822_p2 = ($signed(idxCol_fu_232) < $signed(32'b10000000001)? 1'b1: 1'b0);
assign tmp_15_fu_783_p1 = pixConvolved_Power_fu_220[10:0];
assign tmp_16_fu_724_p4 = {{idxRow_fu_228[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_17_fu_666_p4 = {{idxCol_fu_232[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_18_fu_828_p1 = idxCol_fu_232[10:0];
assign tmp_23_0_1_fu_717_p1 = pixConvolved_1_fu_711_p2;
assign tmp_23_0_2_fu_770_p1 = col_assign_1_0_2_fu_765_p2;
assign tmp_35_0_1_fu_793_p1 = pixConvolved_Power_1_fu_787_p2;
assign tmp_4_fu_615_p2 = (j_reg_449 == ap_const_lv11_401? 1'b1: 1'b0);
assign tmp_5_fu_621_p2 = (i_reg_425 == ap_const_lv11_0? 1'b1: 1'b0);
assign tmp_6_fu_761_p1 = pixConvolved_fu_224;
assign tmp_7_fu_627_p2 = (tmp_5_fu_621_p2 | grp_fu_528_p2);
assign tmp_8_fu_633_p2 = (j_reg_449 == ap_const_lv11_401? 1'b1: 1'b0);
assign tmp_9_fu_659_p1 = idxCol_fu_232;
assign tmp_fu_805_p1 = result_fu_509_p1;
assign tmp_s_fu_682_p2 = (countWait_1_reg_460 + ap_const_lv21_1);
always @ (posedge ap_clk)
begin
    tmp_9_reg_981[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
    pixConvolved_Power_fu_220[31:11] <= 21'b000000000000000000000;
    pixConvolved_fu_224[31:11] <= 21'b000000000000000000000;
    idxCol_fu_232[31:11] <= 21'b000000000000000000000;
end



endmodule //hls_hotspot_func_hls

